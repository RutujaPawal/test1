pipeline {
    agent any 
    
    tools {
        maven 'Maven3'
    }
    
        environment {
        registry = "147660862290.dkr.ecr.ap-south-1.amazonaws.com/hello-repository"
    }
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/RutujaPawal/springboot-app.git']]])
            }
        }
        
        stage ('Build') {
            steps {
                sh 'mvn clean install'           
            }
        } 
        
        stage('SonarQube analysis') {
            //    def scannerHome = tool 'SonarScanner 4.0';
            steps{
                    withSonarQubeEnv('sonarqube-8.9.10') { 
                      // If you have configured more than one global server connection, you can specify its name
                       // sh "${scannerHome}/bin/sonar-scanner"
                        sh "mvn sonar:sonar"
                }
            }
        }
        
            // Building Docker images
        stage('Building image') {
            steps{
               script {
                  dockerImage = docker.build registry 
                }
            }
        }
            // Uploading Docker images into AWS ECR
        stage('Pushing to ECR') {
            steps{  
               script {
                sh 'aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 147660862290.dkr.ecr.ap-south-1.amazonaws.com'
                sh 'docker push public.ecr.aws/u1d8d2w5/project'
               }
            }
        }
        stage('K8S Deploy') {
            steps{   
               script {
                 withKubeConfig([credentialsId: 'K8S', serverUrl: '']){
                  sh 'kubectl apply -f eks-deploy-k8s.yaml'
                 }
              }
           }
        }
    }
}
